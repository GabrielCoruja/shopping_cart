{"version":3,"sources":["components/ProductList.js","store/actions/product.js","components/ShoppingCart.js","store/reducers/product.js","store/reducers/index.js","store/index.js","App.js","serviceWorker.js","index.js"],"names":["connect","state","quantityPhone","product","quantityWine","quantityGlass","products","dispatch","addPhone","type","addWine","addGlass","title","price","onClick","disabled","totalPrice","toFixed","INITIAL_STATE","id","combineReducers","action","store","createStore","rootReducer","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fdac3f6b.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { addPhone, addWine, addGlass } from '../store/actions/product';\n\nconst ProductList = ({ products, addPhone, addWine, addGlass,\n  quantityPhone, quantityWine, quantityGlass,\n}) => (\n  <div>\n    <h2>Produtos disponíveis</h2>\n    <table>\n      <thead>\n        <tr>\n        <th>Título</th>\n        <th>Preço</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>{products[0].title}</td>\n          <td>R${products[0].price}</td>\n          <td>\n            <button type=\"button\" onClick={() => addPhone(products[0])} disabled={quantityPhone === 5}>\n              Adicionar\n            </button>\n          </td>\n        </tr>\n        <tr>\n          <td>{products[1].title}</td>\n          <td>R${products[1].price}</td>\n          <td>\n            <button type=\"button\" onClick={() => addWine(products[1])} disabled={quantityWine === 5}>\n              Adicionar\n            </button>\n            </td>\n        </tr>\n        <tr>\n          <td>{products[2].title}</td>\n          <td>R${products[2].price}</td>\n          <td>\n            <button type=\"button\" onClick={() => addGlass(products[2])} disabled={quantityGlass === 5}>\n              Adicionar\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n);\n\nconst mapStateToProps = (state) => ({\n  quantityPhone: state.product.quantityPhone,\n  quantityWine: state.product.quantityWine,\n  quantityGlass: state.product.quantityGlass,\n  products: state.product.products,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addPhone: (product) => dispatch(addPhone(product)),\n  addWine: (product) => dispatch(addWine(product)),\n  addGlass: (product) => dispatch(addGlass(product)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductList);\n","export const ADD_PHONE = 'ADD_PHONE';\nexport const ADD_WINE = 'ADD_WINE';\nexport const ADD_GLASS = 'ADD_GLASS';\n\nexport const addPhone = (product) => ({\n  type: ADD_PHONE,\n  product,\n});\n\nexport const addWine = (product) => ({\n  type: ADD_WINE,\n  product,\n});\n\nexport const addGlass = (product) => ({\n  type: ADD_GLASS,\n  product,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst ShoppingCart = ({ products, totalPrice, quantityPhone, quantityWine, quantityGlass }) => (\n  <div>\n    <h2>Carrinho de compras</h2>\n    <ul>\n          <li>\n            {products[0].title} {quantityPhone}X\n          </li>\n          <li>\n            {products[1].title} {quantityWine}X\n          </li>\n          <li>\n            {products[2].title} {quantityGlass}X\n          </li>\n    </ul>\n    <div>Total: R${totalPrice.toFixed(2)}</div>\n  </div>\n);\n\nconst mapStateToProps = (state) => ({\n  quantityPhone: state.product.quantityPhone,\n  quantityWine: state.product.quantityWine,\n  quantityGlass: state.product.quantityGlass,\n  products: state.product.products,\n  totalPrice: state.product.totalPrice,\n});\n\nexport default connect(mapStateToProps)(ShoppingCart);\n","import { ADD_PHONE, ADD_WINE, ADD_GLASS } from '../actions/product';\n\nexport const INITIAL_STATE = {\n  products: [{\n    id: 1,\n    title: 'Fone de ouvido',\n    price: 20.89,\n  }, {\n    id: 2,\n    title: 'Vinho do porto',\n    price: 57,\n  }, {\n    id: 3,\n    title: 'Copo lagoinha',\n    price: 5.45,\n  }],\n  totalPrice: 0,\n  quantityPhone: 0,\n  quantityWine: 0,\n  quantityGlass: 0,\n};\n\nexport const reducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ADD_PHONE:\n      return {\n        products: [\n          ...state.products,\n        ],\n        totalPrice: state.totalPrice + action.product.price,\n        quantityPhone: state.quantityPhone + 1,\n        quantityWine: state.quantityWine,\n        quantityGlass: state.quantityGlass,\n      };\n      case ADD_WINE:\n      return {\n        products: [\n          ...state.products,\n        ],\n        totalPrice: state.totalPrice + action.product.price,\n        quantityWine: state.quantityWine + 1,\n        quantityPhone: state.quantityPhone,\n        quantityGlass: state.quantityGlass,\n      };\n      case ADD_GLASS:\n      return {\n        products: [\n          ...state.products,\n        ],\n        totalPrice: state.totalPrice + action.product.price,\n        quantityGlass: state.quantityGlass + 1,\n        quantityWine: state.quantityWine,\n        quantityPhone: state.quantityPhone,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\n\nimport { reducer as product } from './product';\n\nexport default combineReducers({\n  product,\n});\n","import { createStore } from 'redux';\n\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import React from 'react';\n\nimport ProductList from './components/ProductList';\nimport ShoppingCart from './components/ShoppingCart';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <ProductList />\n        <ShoppingCart />\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n    <App />,\n   document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}